#!/bin/bash
set -e

. ../common

  # Add encrypt hook to mkinitcpio.conf
sed -i 's/HOOKS="base udev autodetect modconf block keyboard keymap filesystems resume"/HOOKS="base udev autodetect modconf block encrypt lvm2 keyboard keymap filesystems resume fsck"/' /etc/mkinitcpio.conf

# Install ZFS
cat >> /etc/pacman.conf << EndOfMessage
[archzfs]
Server = http://archzfs.com/\$repo/x86_64
EndOfMessage

# add archzfs keys
GPG_KEY='5E1ABF240EE7A126'
( pacman-key --keyserver ha.pool.sks-keyservers.net  --recv-keys "$GPG_KEY" || \
    pacman-key --keyserver pgp.mit.edu --recv-keys "$GPG_KEY" || \
  pacman-key --keyserver keyserver.pgp.com --recv-keys "$GPG_KEY" )

pacman-key --keyserver pool.sks-keyservers.net --lsign-key 5E1ABF240EE7A126

pacman -Syy

# Downgrade kernel to 14.15.1-2
cd /tmp
kernel_version=$(pacman -Si spl-linux | egrep -o -e 'linux=.*' | grep -o "[0-9].*")
kernel="linux-$kernel_version-x86_64.pkg.tar.xz"
headers="linux-headers-$kernel_version-x86_64.pkg.tar.xz"
wget -q https://archive.archlinux.org/packages/l/linux/"$kernel"
wget -q https://archive.archlinux.org/packages/l/linux-headers/"$headers"
pacman -U --noconfirm "$kernel" "$headers"

# update and install
pacman -Syy
install_packages spl-linux zfs-linux zfs-utils-common spl-utils-common
install_aur_packages zfs-auto-snapshot-git

# enable zfs service
mkdir /mnt/HeartOfGold
systemctl enable zfs-import-cache.service \
  zfs-import-scan.service \
  zfs-mount.service  \
  zfs-auto-snapshot-daily.timer \
  zfs-auto-snapshot-monthly.timer \
  zfs-auto-snapshot-weekly.timer


# Setup the locales.
echo "en_US.UTF-8 UTF-8" > /etc/locale.gen
locale-gen

# Set the root password
if [ -n  "$ROOT_PASSWD" ]; then
    echo "Using root password provided by environment variable..."
    echo -en "$ROOT_PASSWD\n$ROOT_PASSWD" | passwd
else
    echo "Using default root password..."
    echo -en "password\npassword" | passwd
fi

# Use Bash
install_packages bash bash-completion

# Add our users
groupadd guests
useradd -m -G adm,ftp,games,http,log,rfkill,sys,systemd-journal,users,uucp,wheel -s /bin/bash dpendolino
# useradd -m -G guests,users -s /bin/zsh guest

# TODO: restrict access to su/sudo commands for non-wheel users

# Set the root password
if [ -n  "$USER_PASSWD" ]; then
    echo "Using user password provided by environment variable..."
    echo -en "$USER_PASSWD\n$USER_PASSWD" | passwd dpendolino
else
    echo "Using default user password..."
    echo -en "password\npassword" | passwd dpendolino
fi

# Install fresh copy of dotfiles for dpendolino.
# dotbot requires Python.
install_packages python
runuser -l dpendolino -c "git clone https://github.com/dpendolino/dotfiles.git ~/.dotfiles"
runuser -l dpendolino -c "cd ~/.dotfiles && ./install"
# Now that they are installed, removed dotbot to clean up the image.
runuser -l dpendolino -c "rm -r ~/.dotfiles/dotbot"

# Setup sudo
install_packages sudo
echo "dpendolino ALL=(ALL) ALL" >> /etc/sudoers

# Enable ssh
install_packages openssh
systemctl enable sshd


# Fonts
install_packages \
  nerd-fonts-complete \
  ttf-hack-powerline-git \
  ttf-symbola \
  noto-fonts \
  noto-fonts-emoji \
  noto-fonts-extra \

install_aur_packages ttf-google-fonts-git

# Locale
echo "LANG=en_US.UTF-8" >> /etc/locale.conf
echo "LC_COLLATE=en_US.UTF-8" >> /etc/locale.conf

# Timezone
rm /etc/localtime
ln -s ../usr/share/zoneinfo/US/Eastern /etc/localtime

# Time sync
install_packages ntp
systemctl enable ntpd

# Quality of life packages
install_packages \
archey3 \
atop \
bind-tools \
cifs-utils \
fasd \
fzf \
htop \
iotop \
linux-headers \
net-tools \
nmap \
powerline \
python-pip \
rsync \
ruby \
ruby-rdoc \
tcpdump \
vim \

# install_packages hstr-git

# update gems
gem update --system

# Install custom PS1
pip install powerline-shell
