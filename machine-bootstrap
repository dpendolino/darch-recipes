#!/bin/bash
set -e

# This file is used to setup a base Arch machine
# that will be used solely for booting Darch images.
# Run this script from within the Arch live cd.

wget -q -O- https://www.archlinux.org/mirrorlist/\?country\=US\&protocol\=http\&protocol\=https\&ip_version\=4\&use_mirror_status\=on \
  | sed -e "s/#Server/Server/g" \
  > /etc/pacman.d/mirrorlist

parted -s /dev/sda \
        mklabel gpt \
        mkpart primary 1MiB 2GiB \
        mkpart primary 2GiB 40GiB \

mkfs.fat /dev/sda1

pvcreate /dev/sda2
vgcreate vg00 /dev/sda2
lvcreate -L 100MB vg00 -n darchconfig
lvcreate -L 20GiB vg00 -n darchlib
lvcreate -L 5GiB vg00 -n root
lvcreate -l 100%FREE vg00 -n home

mkfs.ext4 /dev/mapper/vg00-darchconfig
mkfs.ext4 /dev/mapper/vg00-darchlib
mkfs.ext4 /dev/mapper/vg00-root
mkfs.ext4 /dev/mapper/vg00-home

mount /dev/mapper/vg00-root /mnt
mkdir -p /mnt/etc/darch
mount /dev/mapper/vg00-darchconfig /mnt/etc/darch
mkdir -p /mnt/var/lib/darch
mount /dev/mapper/vg00-darchlib /mnt/var/lib/darch
mkdir /mnt/boot
mount /dev/sda1 /mnt/boot
mkdir /mnt/home
mount /dev/mapper/vg00-home /mnt/home

pacstrap /mnt base base-devel zsh patch git wget

# The arch installation creates duplicate groups.
arch-chroot /mnt /usr/bin/env bash -c "grpck || true"
arch-chroot /mnt /usr/bin/env bash -c "pwck || true"

genfstab -U -p /mnt >> /mnt/etc/fstab

echo "en_US.UTF-8 UTF-8" > /mnt/etc/locale.gen
echo "en_US ISO-8859-1" >> /mnt/etc/locale.gen
arch-chroot /mnt locale-gen

rm /mnt/etc/localtime
ln -s ../usr/share/zoneinfo/US/Eastern /mnt/etc/localtime

echo -e "[Match]\nName=en*\n[Network]\nDHCP=ipv4" > /mnt/etc/systemd/network/wired-dhcp.network
arch-chroot /mnt systemctl enable systemd-networkd
arch-chroot /mnt systemctl enable systemd-resolved

echo "Enter root password..."
arch-chroot /mnt passwd

arch-chroot /mnt useradd -m -g users -G adm,ftp,games,http,log,rfkill,sys,systemd-journal,users,uucp,wheel -s /bin/bash dpendolino
echo "dpendolino ALL=(ALL) ALL" > /mnt/etc/sudoers.d/dpendolino

echo "Enter user password..."
arch-chroot /mnt passwd dpendolino

# Patch makepkg to allow running as root.
arch-chroot /mnt /usr/bin/env bash -c "curl https://gist.githubusercontent.com/pauldotknopf/ff8e986225ab2f264acea1a5bb0c6c5a/raw/66e39c98b1a87cb40abfd489dba53bb5a8625186/makepkg.patch | patch /usr/bin/makepkg"

# Now that we can run makepkg with root, let's install trizen.
arch-chroot /mnt git clone https://aur.archlinux.org/trizen.git /trizen
arch-chroot /mnt /usr/bin/env bash -c "cd /trizen && makepkg -si --noconfirm"
arch-chroot /mnt rm -r /trizen

# Install Darch
arch-chroot /mnt trizen -S darch --noconfirm --noedit
# Enable containerd, which was brought in as a dependency.
arch-chroot /mnt systemctl enable containerd
# containerd normally stores data in /var/lib/containerd.
# Normally, Darch images will be mounted into each image at /var/lib/darch via fstab.
# So, to persist containerd images as well, let's store them at /var/lib/darch/containerd
mkdir -p /mnt/etc/containerd/
echo "root = \"/var/lib/darch/containerd\"" > /mnt/etc/containerd/config.toml

# Enable SSH
arch-chroot /mnt pacman -S --noconfirm openssh
arch-chroot /mnt systemctl enable sshd

arch-chroot /mnt pacman -S --noconfirm grub efibootmgr
arch-chroot /mnt grub-install /dev/sda --target=x86_64-efi --efi-directory=/boot
arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg

# Add lvm2 to our initcpio.
sed -i 's/HOOKS=.*/HOOKS="base udev autodetect modconf block lvm2 filesystems keyboard fsck"/' /mnt/etc/mkinitcpio.conf
arch-chroot /mnt mkinitcpio -p linux
